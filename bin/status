#!/bin/sh
set -eu -o pipefail

export ETH_RPC_URL="https://mainnet.infura.io/v3/de5e2a8780c04964950e73b696d1bfb1"
export SALE="0x864fDEF96374A2060Ae18f83bbEc924f174D6b35"
export SETH_CHAIN=mainnet
export GAS_PRICE=1gwei
export TIMELOCK="0x8dA8f82d2BbDd896822de723F55D6EdF416130ba"

if ! [[ -v ETH_KEYSTORE && -v ETH_FROM ]]; then
  echo "fatal: variables not set"
  exit 1
fi

if ! [[ -v SALE ]]; then
  echo "fatal: SALE must be set"
  exit 1
fi

CRP=$(seth call $SALE 'crpPool()(address)')
POOL=$(seth call $CRP 'bPool()(address)')
RAD=$(seth call $SALE 'radToken()(address)')
USDC=$(seth call $SALE 'usdcToken()(address)')

echo "Sale at $SALE"
echo "RAD at $RAD"
echo "USDC at $USDC"

echo "RAD sale balance: $(seth --from-wei $(seth call $SALE 'radTokenBalance()(uint256)'))"
echo "USDC sale balance (wei): $(seth call $SALE 'usdcTokenBalance()(uint256)')"

# CRP
echo "CRP Pool at $CRP"
echo "CRP Pool controller is $(seth call $CRP 'getController()(address)')"
echo "CRP isPublicSwap: $(seth call $CRP "isPublicSwap()(bool)")"

# BPOOL
echo "Balancer Pool at $POOL"
echo "Pool controller is $(seth call $POOL 'getController()(address)')"
echo "RAD actual balance: $(seth --from-wei $(seth call $POOL 'getBalance(address)(uint256)' $RAD))"
echo "USDC actual balance (wei): $(seth call $POOL 'getBalance(address)(uint256)' $USDC)"
echo "RAD spot price: $(seth call $POOL 'getSpotPriceSansFee(address,address)(uint256)' $USDC $RAD)"

# TIMELOCK
echo "Timelock RADP balance: $(seth --from-wei $(seth call $CRP 'balanceOf(address)(uint256)' $TIMELOCK))"

echo "RAD denorm weights: $(seth --from-wei $(seth call $POOL 'getDenormalizedWeight(address)(uint256)' $RAD))"
echo "USDC denorm weights: $(seth --from-wei $(seth call $POOL 'getDenormalizedWeight(address)(uint256)' $USDC))"

echo "RAD norm weights: $(seth --from-wei $(seth call $POOL 'getNormalizedWeight(address)(uint256)' $RAD))"
echo "USDC norm weights: $(seth --from-wei $(seth call $POOL 'getNormalizedWeight(address)(uint256)' $USDC))"
